- göra så man måste ange LOG_DIR
    ... skit i /dev/null-grejer
    ... kolla att det funkar i django_tango

- inkludera NAVIGATION_TEMPLATE

- göra så man bara har ett middleware?

- måste gruppera felen på hash och count

får cirkulär import om jag kör det här:
        url = get_setting("LOGIN_REDIRECT_URL")
        #if url == global_settings.LOGIN_REDIRECT_URL:
            # override django's default url
        #    url = str(reverse_lazy("bootleg:dev_null"))

**********************
 settings
**********************

- kontrollera URLar
    ... vilka URLar?

- länk för att uppdatera:
    http://localhost:8000/list/kebab/

- update verkar inte funka:
    http://localhost:8000/update/kebab/12

- göra vyer för system och deploy som använder template som man har definerat, eller eget som default

- humaniza datumet (också?) här:
    http://localhost:8000/deploy/info/
    ... ta bort sekunder också

- ingen favicon syns

- dubbla slash i github-urlen
    http://localhost:8000/deploy/info/

***********************
 meny
***********************

    - javascriptvarningar i menyn

***********************
 system
***********************

    - skriva ut i system att det är fejkdata om man använder textfilerna

    - varna i olika färger på load osv. - med javascript

***********************
 profile
***********************

    - en konfigparameter för om man ska använda profile

***********************
 login middleware
***********************

    - måste kunna sätta URLar till LoginMiddleWare som kräver login:
        django-admin/*
        admin/*

***********************
 loggning
***********************

    - kunna skicka med extra_text till log_exception

***********************
 HTML/CSS
***********************

    - kolla på hur django_debug_toolbar får in sin HTML/css
        HTML: class="djdt-hidden"

        toolbar.css t.ex.

        ... det fanns något render i middleware som var intressant

***************************************
 deploy
***************************************

- visa när servern startats om + senaste filerna i foldrar

- kontroller av ägare/rättigheter på:
    virtual-env-diret
    projekt-diret
    log-dir

- ta URL vid git pull från GIT_URL i settings om den finns

- hantera Requirements already... i pip install så det inte spammar

- hantera failat:
    git pull
    pip install
    management.call_command("migrate")
    management.call_command("collectstatic", interactive=False)
    server restart

    ***************************
     spara deploy data?
    ***************************

        - spara ner lite data kring deployen, om det gick bra
            - datum/tid
            - användare som deployade
            - git commit

        - spara failade deployer (med ett exception?)

***************************************
 förbättringar
***************************************

- försöka fixa så man inte behöver url_apps.py
    (det pajar namespacet för djdt och django-admin med app_name i urls.py)

- göra så man inte behöver inkludera init i urls.py
    ... sätter error handlers

***************************************
 errors
***************************************

- göra en test-sida för error-sidorna:
    /obscurity-by-test/error/<status_code>/
    ... kräv is_staff

- en ping-url

- en krasch-url
    ... kräv is_staff

- fixa så man fångar exception i manage-kommandon också (har ändrat i manage.py för gigguide för  det)

*********************************
 modelrevisioner
*********************************

- in med revisionsmodellen
    ... det ska räcka med att extenda den. Ha settings för "save_revision" i save

***************************************
 content-type
***************************************

    content type-modell, med cachat objekt
