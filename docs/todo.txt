- göra vyer för system och deploy som använder template som man har definerat, eller eget som default

- rendera deploy och system i menyn

- dubbla slash i github-urlen
    http://localhost:8000/deploy/info/

- funkar icke:
    http://localhost:8000/list/kebab/

- funkar icke:
    http://localhost:8000/create/kebab/

***********************
 error-sidor
***********************

kolla att alla error-templates finns

***********************
 meny
***********************

- javascriptvarningar i menyn

***********************
 system
***********************

- skriva ut i system att det är fejkdata om man använder textfilerna

- varna i olika färger på load osv. - med javascript

***********************
 profile
***********************

- en konfigparameter för om man ska använda profile

***********************
 login middleware
***********************

- måste kunna sätta URLar till LoginMiddleWare som kräver login:
    django-admin/*
    admin/*

***********************
 loggning
***********************

- kunna skicka med extra_text till log_exception

***********************
 HTML/CSS
***********************

- kolla på hur django_debug_toolbar får in sin HTML/css
    HTML: class="djdt-hidden"

    toolbar.css t.ex.

***************************************
 deploy
***************************************

- tag för att rendera deploy-status osv.

- visa när servern startats om + senaste filerna i foldrar

- git-historik (lär behöva ta via github-api)

- kontroller av ägare/rättigheter på:
    virtual-env-diret
    projekt-diret
    log-dir

- ta URL vid git pull från GIT_URL i settings om den finns

- hantera Requirements already... i pip install så det inte spammar

- hantera failat:
    git pull
    pip install
    management.call_command("migrate")
    management.call_command("collectstatic", interactive=False)
    server restart

    ***************************
     dela upp
    ***************************

    - dela upp mantis, ett paket som bara har nix-tools
        ... problem med ett nytt repo?!?!?!

    ***************************
     spara deploy data?
    ***************************

        - spara ner lite data kring deployen, om det gick bra
            - datum/tid
            - användare som deployade
            - git commit

        - spara failade deployer (med ett exception?)

***************************************
 errors
***************************************

- göra en test-sida för error-sidorna:
    /obscurity-by-test/error/<status_code>/
    ... kräv is_staff

- en ping-url

- en krasch-url
    ... kräv is_staff

- fixa så man fångar exception i manage-kommandon också (har ändrat i manage.py för gigguide för  det)

*********************************
 modelrevisioner
*********************************

- in med revisionsmodellen
    ... det ska räcka med att extenda den. Ha settings för "save_revision" i save

***************************************
 content-type
***************************************

    content type-modell, med cachat objekt
